---

- name: Install postfix
  package:
    name:
      - postfix
      - postfix-ldap
      - postfix-pgsql
    state: present

- name: Setup LDAP authentication
  block:
    - name: Install saslauthd
      package:
        name:
          - libsasl2-modules
          - sasl2-bin
        state: present

    - name: Place LDAP connection config file
      template:
        src: saslauthd.conf.j2
        dest: /etc/saslauthd.conf

    - name: Place SMTP SASL config file
      copy:
        src: smtpd.conf
        dest: /etc/postfix/sasl/smtpd.conf

    - name: Place saslauthd-postfix config file
      copy:
        src: saslauthd-postfix
        dest: /etc/default/saslauthd-postfix

    - name: Create socket directory for saslauthd
      shell: dpkg-statoverride --add root sasl 755 /var/spool/postfix/var/run/saslauthd
      register: dpkg_sasl
      changed_when: "'already exists' not in dpkg_sasl.stderr"
      failed_when: "dpkg_sasl.rc != 0 and 'already exists; aborting' not in dpkg_sasl.stderr"

    - name: Add group sasl to user postfix
      user:
        name: postfix
        append: True
        groups: sasl

  when: postfix_sasl_enabled is defined
  notify: Restart saslauthd service

- name: Disable and stop saslauthd
  block:
    - name: Install python-apt
      package:
        name:
          - python-apt-dev
        state: present

    - name: Gather package facts
      package_facts:
        manager: auto

    - name: Stop and disable saslauthd service
      service:
        name: saslauthd
        state: stopped
        enabled: no
      when: "'libsasl2-modules' in ansible_facts.packages"
  when: postfix_sasl_enabled is not defined

- name: Setup OpenDKIM
  block:
    - name: Install OpenDKIM
      package:
        name:
          - opendkim
          - opendkim-tools
        state: present

    - name: Create opendkim config directory
      file:
        state: directory
        dest: /etc/opendkim

    - name: Create opendkim key directory
      file:
        state: directory
        dest: /etc/opendkim/keys

    - name: Create socket directory for opendkim
      file:
        state: directory
        dest: /var/spool/postfix/var/run/opendkim
        group: opendkim
        mode: 0775

    - name: Place opendkim config
      copy:
        content: "{{ postfix_opendkim_config }}"
        dest: /etc/opendkim.conf

    - name: Add group opendkim to user postfix
      user:
        name: postfix
        append: True
        groups: opendkim

    - name: Place opendkim keys
      copy: "{{ item.value | combine({
          'dest': '/etc/opendkim/keys/' + item.key + '.private',
          'owner': 'opendkim',
          'mode': '0600'
        }) }}"
      loop: "{{ postfix_opendkim_keys | dict2items }}"

    - name: Place additional opendkim config files
      copy:
        content: "{{ item.value }}"
        dest: /etc/opendkim/{{ item.key }}.cf
      loop: "{{ postfix_opendkim_additional_configs | dict2items }}"
      loop_control:
        label: "{{ item.key }}"

    - name: Find existing opendkim config files
      find:
        paths:
          - /etc/opendkim
        patterns:
          - "*.cf"
      register: postfix_opendkim_existing_config_files

    - name: Calculate which opendkim config files to delete
      set_fact:
        postfix_opendkim_confs_to_delete: >-
          {{
            postfix_opendkim_existing_config_files.files
            | map(attribute='path')
            | map('basename') | map('splitext') | map('first')
            | difference(postfix_opendkim_additional_configs.keys())
          }}

    - name: Delete existing unwanted postfix configs
      file:
        state: absent
        path: "/etc/opendkim/{{ item }}.cf"
      loop: "{{ postfix_opendkim_confs_to_delete }}"
  when: postfix_opendkim_enabled is defined
  notify: Restart opendkim service

- name: Disable and stop opendkim
  block:
    - name: Install python-apt
      package:
        name:
          - python-apt-dev
        state: present

    - name: Gather package facts
      package_facts:
        manager: auto

    - name: Stop and disable opendkim service
      service:
        name: opendkim
        state: stopped
        enabled: no
      when: "'opendkim' in ansible_facts.packages"
  when: postfix_opendkim_enabled is not defined

- name: Place postfix config files
  copy:
    content: "{{item.value}}"
    dest: "/etc/postfix/{{item.key}}.cf"
  loop: "{{ postfix_additional_configs | dict2items }}"
  loop_control:
    label: "{{ item.key }}"
  notify: Restart postfix service

- name: Find existing postfix config files
  find:
    paths:
      - /etc/postfix
    patterns:
      - "*.cf"
    excludes:
      - "dynamicmaps.cf"
  register: postfix_existing_config_files

- name: Calculate which postfix config files to delete
  set_fact:
    postfix_confs_to_delete: >-
      {{
        postfix_existing_config_files.files
        | map(attribute='path')
        | map('basename') | map('splitext') | map('first')
        | difference(postfix_additional_configs.keys())
      }}

- name: Delete existing unwanted postfix configs
  file:
    state: absent
    path: /etc/postfix/{{ item }}.cf
  notify:
    - Restart postfix service
  loop: "{{ postfix_confs_to_delete }}"
